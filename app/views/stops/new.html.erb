<div class="container">
  <h2> Create New Tour Stop </h2>
  Click on map to set latitude/longitude
  <input id="pac-input" class="controls" type="text" placeholder="Search Locations">
  <div class="row">
    <div id="new-stop-map" class="small-4 columns"> </div>

    <script type="text/javascript">
    function initialize() {

    var markers = [];
    var map = new google.maps.Map(document.getElementById('new-stop-map'), {
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    var defaultBounds = new google.maps.LatLngBounds(
        new google.maps.LatLng(42.397392, -71.116848),
        new google.maps.LatLng(42.338416, -71.030674));
    map.fitBounds(defaultBounds);

    // Create the search box and link it to the UI element.
    var input = /** @type {HTMLInputElement} */(
        document.getElementById('pac-input'));
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

    var searchBox = new google.maps.places.SearchBox(
      /** @type {HTMLInputElement} */(input));

    // [START region_getplaces]
    // Listen for the event fired when the user selects an item from the
    // pick list. Retrieve the matching places for that item.
    google.maps.event.addListener(searchBox, 'places_changed', function() {
      var places = searchBox.getPlaces();

      if (places.length == 0) {
        return;
      }
      for (var i = 0, marker; marker = markers[i]; i++) {
        marker.setMap(null);
      }

      // For each place, get the icon, place name, and location.
      // I set google's marker to have a size of 0, but that's dumb, should be my image
      markers = [];
      var bounds = new google.maps.LatLngBounds();
      for (var i = 0, place; place = places[i]; i++) {
        var image = {
          url: place.icon,
          size: new google.maps.Size(71, 71),
          origin: new google.maps.Point(0, 0),
          anchor: new google.maps.Point(17, 34),
          scaledSize: new google.maps.Size(12, 12)
        };

        // Create a marker for each place.
        var marker = new google.maps.Marker({
          map: map,
          icon: image,
          title: place.name,
          position: place.geometry.location
        });

        markers.push(marker);

        bounds.extend(place.geometry.location);
      }

      map.fitBounds(bounds);
    });
    // [END region_getplaces]

    // Bias the SearchBox results towards places that are within the bounds of the
    // current map's viewport.
    google.maps.event.addListener(map, 'bounds_changed', function() {
      var bounds = map.getBounds();
      searchBox.setBounds(bounds);
    });

    google.maps.event.addListener(map, 'click', function(event) {
         $("#stop_latitude").val(event.latLng.lat());
         $("#stop_longitude").val(event.latLng.lng());
       })
   }

   google.maps.event.addDomListener(window, 'load', initialize);
    </script>

    <div class="small-5 columns">
      <%= form_for [@tour, @stop] do |f| %>

        <%= f.label :name %>
        <%= f.text_field :name %>

        <%= f.label :description %>
        <%= f.text_field :description %>

        <%= f.label :latitude %>
        <%= f.text_field :latitude %>

        <%= f.label :longitude %>
        <%= f.text_field :longitude %>

        <%= f.label :stop_length %>
        <%= f.text_field :stop_length %>

        <%= f.submit class: :button %>
      <% end %>
    </div>

  </div>

  <p><%= link_to "Done Adding Stops", tour_path(@tour), class: :button %></p>
</div>
